<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
<context:component-scan base-package="com.joyworks.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- <import resource="classpath:META-INF/cxf/cxf.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
	<jaxws:endpoint id="sendCoffee" implementor="com.joyworks.web.service.impl.SendCoffeeImpl" address="/SendCoffee">
	</jaxws:endpoint> -->


	<!-- 加载外部属性配置文件 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" >
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:jedis.properties</value>
				<value>classpath:mail.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置C3P0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="configLocation" value="classpath:mybatis.xml"></property>
	    <property name="dataSource" ref="dataSource"></property>
	    <property name="typeAliasesPackage" value="com.joyworks.entity"></property>
	    <property name="mapperLocations">
	        <list>
	            <value>classpath*:mybatis/mapper-*.xml</value>
	        </list>
	    </property> 
	</bean>
	
	<!-- 扫描Mapper映射配置 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.joyworks.dao"/>
	</bean>

	<!--配置jedis連接池配置對象  -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${jedis.pool.maxTotal}"/>
		<property name="maxIdle" value="${jedis.pool.setMaxIdle}"/>
		<property name="maxWaitMillis" value="${jedis.pool.setMaxWaitMillis}"/>
		<property name="testOnBorrow" value="${jedis.pool.setTestOnBorrow}"/>
	</bean>
	<!--配置jedis連接池  -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" lazy-init="true">
		 <constructor-arg  index="0"  ref="jedisPoolConfig" />    
    <constructor-arg  index="1"  value="${redis.ip}" />    
    <constructor-arg  index="2"  value="${redis.port}" type="int" />  
    <constructor-arg  index="3"  value="${redis.timeout}" type="int" />
	</bean>
	<!-- 邮件发送器 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}"/>
		<property name="username" value="${mail.username}"/>
		<property name="password" value="${mail.password}"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="port" value="${mail.smtp.port}"/>
		<property name="javaMailProperties" >
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
				<prop key="mail.smtp.socketFactory.port">${mail.smtp.port}</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.fallback">false</prop>
			</props>
		</property>
	</bean>
	<!-- 邮件发送人 -->
	<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${mail.from}"></property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/>
			<tx:method name="query*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.joyworks..*Service.*(..))"/>
	</aop:config>	

</beans>
